<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.application.community.mapper.CommunityReadMapper">



    <select id="searchResultCnt" parameterType="com.example.application.community.dto.SearchCondition" resultType="int">
        SELECT count(*)
        FROM COMMUNITY
        <where>
            <if test="keyword != null and keyword != ''">
                AND title LIKE concat('%', #{keyword}, '%')
            </if>
        </where>
    </select>


    <select id="selectAllCommunityTag" parameterType="com.example.application.community.dto.SearchCondition" resultMap="communityTagResultMap">


                        SELECT c.communityId, c.title, a.nickname, c.views, c.commentCount, c.createdAt,
                        c.likes, STRING_AGG(t.tagTitle, ',') AS tagTitle, c.modifiedAt, c.deleted, c.imageEnabled
                        FROM community c
                        INNER JOIN account a ON c.accountId = a.accountId
                        LEFT OUTER JOIN communityTag ct ON c.communityId = ct.communityId
                        LEFT OUTER JOIN tag t ON ct.tagId = t.tagId
                        <if test="keyword != null and keyword != ''">
                            WHERE (c.title LIKE '%' || #{keyword} || '%' OR t.tagTitle LIKE '%' || #{keyword} || '%')
                        </if>
                        GROUP BY c.communityId, a.nickname
                        ORDER BY c.communityId DESC
                        LIMIT #{pageSize} OFFSET #{offset}



    </select>

    <resultMap id="communityTagResultMap" type="com.example.application.community.dto.CommunityDto$CommunityTagResultDto">
        <id property="communityId" column="communityId"/>
        <result property="title" column="title"/>
        <result property="nickname" column="nickname"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="commentCount"/>
        <result property="createdAt" column="createdAt"/>
        <result property="likes" column="likes"/>
        <result property="modifiedAt" column="modifiedAt" />
        <result property="deleted" column="deleted" />
        <result property="imageEnabled" column="imageEnabled" />
        <collection property="tagTitle" ofType="java.lang.String">
            <result column="tagTitle"/>
        </collection>
    </resultMap>


    <select id="selectCommunityByCommunityId" parameterType="Long" resultMap="articleDtoResultMap">
        SELECT c.communityId, c.title, c.accountId, a.nickname, c.content, c.views, c.createdAt, c.likes, t.tagTitle, c.modifiedAt
        FROM community c
                 INNER JOIN account a ON c.accountId = a.accountId
                 LEFT OUTER JOIN communityTag ct ON c.communityId = ct.communityId
                 LEFT OUTER JOIN tag t ON ct.tagId = t.tagId
        WHERE c.communityId = #{communityId}
        GROUP BY c.communityId, a.nickname, t.tagTitle

    </select>

    <resultMap id="articleDtoResultMap" type="com.example.application.community.dto.CommunityDto$ArticleDto">
        <id property="communityId" column="communityId"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="accountId" column="accountId" />
        <result property="nickname" column="nickname"/>
        <result property="views" column="views"/>
        <result property="createdAt" column="createdAt"/>
        <result property="likes" column="likes"/>
        <result property="modifiedAt" column="modifiedAt" />
        <collection property="tagTitle" ofType="java.lang.String">
            <result column="tagTitle"/>
        </collection>
    </resultMap>



    <select id="selectArticleUpdateByCommunityId" parameterType="Long" resultType="com.example.application.community.dto.CommunityDto$ArticleModificationFormDto">
        SELECT c.communityId, c.title ,c.accountId , c.content
        FROM community c
        WHERE c.communityId = #{communityId}
    </select>



    <select id="selectCommunityLikesRanking" resultType="com.example.application.community.dto.RankIngLikesDto">
        SELECT communityId, title, createdAt, likes
        FROM community
        WHERE EXTRACT('week' FROM createdAt) = EXTRACT('week' FROM NOW())
        ORDER BY likes DESC
            LIMIT 10;
    </select>


    <select id="selectAccountTitleByCommunityId" parameterType="Long" resultType="java.util.HashMap" >
        SELECT c.accountId, c.title
        FROM community c
        WHERE c.communityId = #{communityId}
    </select>



    <select id="selectFirstPage" parameterType="Map" resultType="com.example.application.community.dto.CursorDto">
        SELECT c.communityId, c.title, c.createdAt
        FROM community c
        WHERE c.accountId = #{accountId}
        ORDER BY c.communityId DESC
        LIMIT #{size}
    </select>

    <select id="selectNextPage" parameterType="Map" resultType="com.example.application.community.dto.CursorDto">
        <![CDATA[
        SELECT c.communityId, c.title, c.createdAt
        FROM community c
        WHERE c.accountId = #{accountId} AND c.communityId < #{communityId}
        ORDER BY c.communityId DESC
            LIMIT #{size}
        ]]>
    </select>

    <select id="selectCommunityIdByAccountId" parameterType="Long" resultType="Long">
        SELECT communityId
        FROM community
        WHERE accountId = #{accountId}
    </select>
</mapper>

